@model Contabilidad.Models.VM.Carlos.clsPlanGrupoTipoFormVMCarlos
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Informacion Plan Grupo Tipo</h3>
                </div>

                <div class="box-body">
                    @using (Html.BeginForm())
                    {
                        using (Html.DevExtreme().ValidationGroup())
                        {
                            @Html.AntiForgeryToken();

                            @*@Html.HiddenFor(m => m.PlanGrupoVM.PlanGrupoId);
                                @Html.HiddenFor(m => m.PlanGrupoVM.NroCuentas);
                                @Html.HiddenFor(m => m.PlanGrupoDetVM[0].PlanGrupoDetId);
                                @Html.HiddenFor(m => m.PlanGrupoDetVM[0].PlanGrupoId);
                                @Html.HiddenFor(m => m.PlanGrupoDetVM[0].PlanFlujoId);
                                @Html.HiddenFor(m => m.PlanGrupoDetVM[0].PlanGrupoId);
                                @Html.HiddenFor(m => m.PlanGrupoDetVM[0].Orden);
                                @Html.HiddenFor(m => m.PlanGrupoDetVM[0].EstadoId);*@

                            @(Html.DevExtreme().Form<Contabilidad.Models.VM.Carlos.clsPlanGrupoTipoFormVMCarlos>()
                                                        .ShowValidationSummary(true)
                                                        .Items(items =>
                                                        {
                                                            items.AddGroup()
                                                            .ColCount(2)
                                                            .Items(groupItems =>
                                                            {
                                                                groupItems.AddSimpleFor(m => m.PlanGrupoTipoCod).Editor(e => e.TextBox().Width("50%").Disabled(true));
                                                                groupItems.AddSimpleFor(m => m.PlanGrupoTipoDes).Editor(e => e.TextBox().Width("100%").Disabled(true));
                                                                groupItems.AddSimpleFor(m => m.PlanGrupoTipoEsp).Editor(e => e.TextBox().Width("100%").Disabled(true)).ColSpan(2);
                                                                groupItems.AddSimpleFor(m => m.EstadoId).Editor(e => e.SelectBox().DataSource(ViewBag.EstadoId).ValueExpr("EstadoId").DisplayExpr("EstadoDes").SearchEnabled(true).ShowClearButton(true).Disabled(true));
                                                            });

                                                            items.AddEmpty();

                                                            items.AddSimple().Template(@<text>
                                                                @(Html.DevExtreme().DataGrid<Contabilidad.Models.VM.Carlos.clsPlanGrupoTipoDetVMCarlos>()
                                                                                    .ID("grid")
                                                                                    .Paging(paging => paging.Enabled(false))
                                                                                    .Editing(editing =>
                                                                                    {
                                                                                        editing.Mode(GridEditMode.Row);
                                                                                        editing.AllowAdding(false);
                                                                                        editing.AllowDeleting(false);
                                                                                        editing.AllowUpdating(false);
                                                                                    })
                                                                                    .DataSource(d => d.WebApi()
                                                                                        .Controller("PlanGrupoTipoDetVMCarlos")
                                                                                        .Key("PlanGrupoTipoDetId")
                                                                                        .InsertAction(true)
                                                                                        .UpdateAction(true)
                                                                                        .DeleteAction(true)
                                                                                        .LoadParams(new { id = Model.PlanGrupoTipoId })
                                                                                    )
                                                                                    .ShowBorders(true)
                                                                                    .Columns(columns =>
                                                                                    {
                                                                                        //columns.AddFor(m => m.Orden).DataType(GridColumnDataType.Number).Width("10%").Alignment(HorizontalAlignment.Center);
                                                                                        columns.AddFor(m => m.PlanGrupoTipoDetCod).Width("20%");
                                                                                        columns.AddFor(m => m.PlanGrupoTipoDetDes).Width("20%");
                                                                                        //columns.AddFor(m => m.PlanGrupoTipoDes).Width("40%")
                                                                                        //    .Lookup(lookup => lookup
                                                                                        //        .DataSource(ViewBag.PlanId)
                                                                                        //        .DisplayExpr("PlanGrupoTipoDes")
                                                                                        //        .ValueExpr("PlanGrupoTipoDetId")
                                                                                        //    );
                                                                                        //columns.AddFor(m => m.SucursalId).Width("30%")
                                                                                        //    .Lookup(lookup => lookup
                                                                                        //        .DataSource(ViewBag.SucursalId)
                                                                                        //        .DisplayExpr("SucursalDes")
                                                                                        //        .ValueExpr("SucursalId")
                                                                                        //    );
                                                                                    })
                                                                                    //.OnContentReady("OnContentReady")
                                                                                    .OnCellPrepared("OnCellPrepared")
                                                                                    .OnInitNewRow("OnInitNewRow")
                                                                )
                                                            </text>);
                                                })
                                                .FormData(Model)
                            )

                            <div Class="box-footer">
                                @*<a href="@Url.Action("Edit", "PlanGrupo", new { id = Model.PlanGrupoVM.PlanGrupoId} )" Class="btn btn-primary"><i Class="fa fa-edit"></i></a>*@
                                <a href="@Url.Action("Index", "PlanGrupoTipoCarlos")" Class="btn btn-default"><i Class="fa fa-reply"></i></a>
                            </div>
                        }
                    }

                </div>
            </div>
        </div>
    </div>
</section>

@(Html.Partial("~/views/Error/InfoPopup.cshtml"))

<script>
    function onValueChanged(e) {
        $("#PlanGrupoTipoDet").dxSelectBox("instance").getDataSource().filter(["PlanGrupoTipoId", "=", e.value]);
        $("#PlanGrupoTipoDet").dxSelectBox("instance").getDataSource().reload();
    }

    function OnContentReady(e) {
        moveEditColumnToLeft(e.component);
    }

    function moveEditColumnToLeft(dataGrid) {
        dataGrid.columnOption("command:edit", {
            visibleIndex: -1,
            width: 50
        });
    }

    function OnCellPrepared(e) {
        if (e.rowType === "data" && e.column.command === "edit") {
            var isEditing = e.row.isEditing,
                $links = e.cellElement.find(".dx-link");

            $links.text("");

            if (isEditing) {
                $links.filter(".dx-link-save").addClass("dx-icon-save");
                $links.filter(".dx-link-cancel").addClass("dx-icon-revert");
            } else {
                $links.filter(".dx-link-edit").addClass("dx-icon-edit");
                $links.filter(".dx-link-delete").addClass("dx-icon-trash");
            }
        }
    }

    function OnInitNewRow(e) {
        e.data.PlanGrupoId = 0;
        e.data.PlanFlujoId = 0;
        e.data.CenCosId = 0;
        e.data.EstadoId = 0;
    }
</script>
